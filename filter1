# filter_html.py
from bs4 import BeautifulSoup
import argparse
import sys
import re
from pathlib import Path

def normalize_ws(text: str) -> str:
    """Collapse runs of whitespace into single spaces and trim."""
    return re.sub(r"\s+", " ", text).strip()

def filter_html(html: str) -> str:
    soup = BeautifulSoup(html, "html.parser")

    # title
    title = soup.title.get_text(strip=True) if soup.title else ""

    # first H1
    h1 = ""
    h1_tag = soup.find("h1")
    if h1_tag:
        h1 = normalize_ws(h1_tag.get_text(" ", strip=True))

    # all paragraph texts
    paragraphs = [
        normalize_ws(p.get_text(" ", strip=True))
        for p in soup.find_all("p")
        if normalize_ws(p.get_text(" ", strip=True))
    ]

    # assemble output
    lines = []
    if title:
        lines.append(f"title:{title}")
    if h1:
        lines.append(h1)
    if paragraphs:
        lines.append("")  # blank line before body
        lines.extend(paragraphs)

    return "\n".join(lines)

def main():
    ap = argparse.ArgumentParser(description="Filter an HTML file to plain text.")
    ap.add_argument("input", help="Path to the HTML file")
    ap.add_argument("-o", "--output", help="Path to write the filtered text (default: stdout)")
    args = ap.parse_args()

    html = Path(args.input).read_text(encoding="utf-8")
    result = filter_html(html)

    if args.output:
        Path(args.output).write_text(result + "\n", encoding="utf-8")
    else:
        sys.stdout.write(result + "\n")

if __name__ == "__main__":
    main()